SpoolAgent.sources = source1
SpoolAgent.sinks = sink1
SpoolAgent.channels = channel1

SpoolAgent.sources.source1.type = exec
SpoolAgent.sources.source1.command = tail -f /home/cloudera/LogCreator/fortune_log.log

SpoolAgent.sinks.sink1.type = hdfs
SpoolAgent.sinks.sink1.hdfs.path = hdfs://localhost/flume/logtest/
SpoolAgent.sinks.sink1.hdfs.filePrefix = LogCreateTest
SpoolAgent.sinks.sink1.hdfs.rollInterval = 600
SpoolAgent.sinks.sink1.hdfs.rollSize = 0
SpoolAgent.sinks.sink1.hdfs.rollCount = 10000
SpoolAgent.sinks.sink1.hdfs.batchSize = 10000
SpoolAgent.sinks.sink1.hdfs.txnEventMax = 40000

# -- Compression codec. one of following : gzip, bzip2, lzo, snappy
# hdfs.codeC = ip
#format: currently SequenceFile, DataStream or CompressedStream
#(1)DataStream will not compress output file and please don't set codeC
#(2)CompressedStream requires set hdfs.codeC with an available codeC
SpoolAgent.sinks.sink1.hdfs.fileType = DataStream
SpoolAgent.sinks.sink1.hdfs.maxOpenFiles=50
# -- "Text" or "Writable"
#hdfs.writeFormat
SpoolAgent.sinks.sink1.hdfs.appendTimeout = 10000
SpoolAgent.sinks.sink1.hdfs.callTimeout = 10000
# Number of threads per HDFS sink for HDFS IO ops (open, write, etc.)
SpoolAgent.sinks.sink1.hdfs.threadsPoolSize=100
# Number of threads per HDFS sink for scheduling timed file rolling
SpoolAgent.sinks.sink1.hdfs.rollTimerPoolSize = 1
# hdfs.kerberosPrin--cipal Kerberos user principal for accessing secure HDFS
# hdfs.kerberosKey--tab Kerberos keytab for accessing secure HDFS
# hdfs.round false Should the timestamp be rounded down (if true, affects all time based escape sequences except %t)
# hdfs.roundValue1 Rounded down to the highest multiple of this (in the unit configured using
# hdfs.roundUnit), less than current time.
# hdfs.roundUnit second The unit of the round down value - second, minute or hour.
# serializer TEXT Other possible options include AVRO_EVENT or the fully-qualified class name of an implementation of the EventSerializer.Builder interface.# serializer.*
# Use a channel which buffers events to a file
# -- The component type name, needs to be FILE.
SpoolAgent.channels.channel1.type = FILE
# checkpointDir ~/.flume/file-channel/checkpoint The directory where checkpoint file will be stored
# dataDirs ~/.flume/file-channel/data The directory where log files will be stored
# The maximum size of transaction supported by the channel
SpoolAgent.channels.channel1.transactionCapacity = 1000000
# Amount of time (in millis) between checkpoints
SpoolAgent.channels.channel1.checkpointInterval 30000
# Max size (in bytes) of a single log file
SpoolAgent.channels.channel1.maxFileSize = 2146435071
# Maximum capacity of the channel
SpoolAgent.channels.channel1.capacity 10000000
#keep-alive 3 Amount of time (in sec) to wait for a put operation
#write-timeout 3 Amount of time (in sec) to wait for a write operation
# Bind the source and sink to the channel
SpoolAgent.sources.source1.channels = channel1
SpoolAgent.sinks.sink1.channel = channel1
